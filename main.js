(()=>{"use strict";function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var t=function(){function t(e,r){var n=e.items,o=e.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)}var r,n;return r=t,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function r(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var n=function(){function e(t,r){var n=t.card,o=t.handleCardClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._card=n,this._cardSelector=r,this._handleCardClick=o}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardPhoto=this._element.querySelector(".card__photo"),this._cardButtonLike=this._element.querySelector(".card__button-like"),this._cardButtonTrash=this._element.querySelector(".card__button-trash"),this._setEventListeners(),this._element.querySelector(".card__title").textContent=this._card.name,this._cardPhoto.src=this._card.link,this._cardPhoto.alt=this._card.name,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._cardPhoto.addEventListener("click",(function(){return e._handleOpenPopup()})),this._cardButtonLike.addEventListener("click",(function(){return e._handleLikeCard()})),this._cardButtonTrash.addEventListener("click",(function(){return e._handleTrashCard()}))}},{key:"_handleLikeCard",value:function(){this._cardButtonLike.classList.toggle("card__button-like_active")}},{key:"_handleTrashCard",value:function(){this._element.remove(),this._element=null}},{key:"_handleOpenPopup",value:function(){this._handleCardClick(this._card)}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var i=function(){function e(t){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t,this._popup=document.querySelector(t),this._handleEscCloseBinded=function(e){return r._handleEscClose(e)}}var t,r;return t=e,(r=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscCloseBinded)}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscCloseBinded),this._popup.classList.remove("popup_opened")}},{key:"_handleClickPopup",value:function(e){(e.target===e.currentTarget||e.target.classList.contains("popup__button-close"))&&this.close()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){return e._handleClickPopup(t)}))}}])&&o(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function s(){return s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=u(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},s.apply(this,arguments)}function u(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=f(e)););return e}function l(e,t){return l=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},l(e,t)}function p(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&l(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=f(n);if(o){var r=f(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return p(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._imagePhoto=t._popup.querySelector(".image-popup__photo"),t._imageTitle=t._popup.querySelector(".image-popup__title"),t}return t=a,(r=[{key:"open",value:function(e){this._imagePhoto.src=e.link,this._imagePhoto.alt=e.name,this._imageTitle.textContent=e.name,s(f(a.prototype),"open",this).call(this)}}])&&c(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function _(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=v(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},y.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function b(e,t){if(t&&("object"===h(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(n);if(o){var r=k(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._form=r._popup.querySelector(".form"),r._handleFormSubmit=t,r._inputList=r._form.querySelectorAll(".form__input"),r}return t=a,(r=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"close",value:function(){y(k(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues()),e.close()})),y(k(a.prototype),"setEventListeners",this).call(this)}}])&&_(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var w=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=r,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._visibleErrorClass=t.visibleErrorClass}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){var e=this;this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._form.addEventListener("input",(function(t){return e._handleFormInput(t)}))}},{key:"_handleFormInput",value:function(e){this._isValid(e.target),this.toggleButtonState()}},{key:"_isValid",value:function(e){var t=this._form.querySelector(".".concat(this._errorClass,"_field_").concat(e.id));e.validity.valid?this._hideInputError(e,t):this._showInputError(e,t,e.validationMessage)}},{key:"_showInputError",value:function(e,t,r){e.classList.add(this._inputErrorClass),t.textContent=r,t.classList.add(this._visibleErrorClass)}},{key:"_hideInputError",value:function(e,t){t.classList.remove(this._visibleErrorClass),t.textContent="",e.classList.remove(this._inputErrorClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}},{key:"hideFormErrors",value:function(){var e=this;this._inputList.forEach((function(t){var r=e._form.querySelector(".".concat(e._errorClass,"_field_").concat(t.id));e._hideInputError(t,r)}))}}])&&E(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var C=function(){function e(t){var r=t.titleSelector,n=t.descriptionSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._titleElement=document.querySelector(r),this._descriptionElement=document.querySelector(n)}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{name:this._titleElement.textContent,description:this._descriptionElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.description;this._titleElement.textContent=t,this._descriptionElement.textContent=r}}])&&S(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),O={inputSelector:".form__input",submitButtonSelector:".form__button",inactiveButtonClass:"form__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"form__input-error",visibleErrorClass:"form__input-error_visible"},P=document.querySelector(".profile"),j=P.querySelector(".profile__edit"),L=P.querySelector(".profile__add-mesto"),q=document.querySelector(".profile-form"),B=document.querySelector(".card-form"),I=q.querySelector(".form__input_field_profile-name"),T=q.querySelector(".form__input_field_profile-description"),x=new C({titleSelector:".profile__title",descriptionSelector:".profile__description"}),R=new d(".popup_type_image");R.setEventListeners();var F=new g(".popup_type_profile",(function(e){x.setUserInfo(e)}));F.setEventListeners();var V=new g(".popup_type_card",(function(e){var t=A(e);D.addItem(t)}));V.setEventListeners(),j.addEventListener("click",(function(){var e=x.getUserInfo(),t=e.name,r=e.description;I.value=t,T.value=r,z.hideFormErrors(),z.toggleButtonState(),F.open()})),L.addEventListener("click",(function(e){U.hideFormErrors(),U.toggleButtonState(),V.open()}));var A=function(e){var t=new n({card:e,handleCardClick:function(e){return R.open(e)}},".card-template");return t.generateCard()},D=new t({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:function(e){var t=A(e);D.addItem(t)}},".cards");D.renderItems();var U=new w(O,B),z=new w(O,q);U.enableValidation(),z.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,